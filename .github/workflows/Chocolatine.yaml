name: CHOCOLATINE Workflow

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  TARGET_REPO: ${{ secrets.MIRROR_URL }}
  EXEC_NAME: 'chocolatine_exe'

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Validate Coding Style
        uses: actions/checkout@master
        with:
          repository: ''

      - name: Run coding-style
        run: check.sh . /tmp

      - name: Create annotation for coding-style errors
        run: |
          input=/tmp/coding-style-reports.log
          while IFS= read -r -a line; do
            fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
            echo "::error title=${fields[2]} coding style error,file=${fields[0]},line=${fields[1]}::${fields[3]}"
          done < $input

      - name: Coding Style Evaluation
        run: |
          NB_ERROR=$(cat /tmp/coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            exit

  compile_program:
    name: Compile Chocolatine
    needs: check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/compile-env:latest

    steps:
      - name: Sync Code
        uses: actions/checkout@v3

      - name: Compilation
        run: |
          make
          make clean

      - name: Validate Executable
        run: |
          if [ ! -x "${EXEC_NAME}" ]; then
            echo "${EXEC_NAME} is not executable or missing."
            exit 1
          fi

  testing:
    name: Execute Tests
    needs: compile_program
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/test-env:latest

    steps:
      - name: Sync Code
        uses: actions/checkout@v3

      - name: Run Chocolatine Tests
        run: make tests_run

  mirror_repo:
    name: Mirror to Target Repository
    needs: testing
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Mirror Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.TARGET_REPO }}
          ssh_private_key: ${{ secrets.SSH_KEY }}
