name: CHOCOLATINE Workflow

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  TARGET_REPO: ${{ secrets.MIRROR_URL }}
  EXEC_NAME: 'chocolatine_exe'

jobs:
  check_coding_style:
    name: "Use coding style"
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - id: check_coding_style
        run: |
          check.sh $(pwd) $(pwd)
          CODING_STYLE_ERRORS=$(cat $(pwd)/coding-style-reports.log)
          for ERRORS in $CODING_STYLE_ERRORS; do
            array=(`echo $ERRORS | sed 's/:/\n/g'`)
            echo "::error file=${array[1]#./},title=${array[3]#./} coding style errors detected: ${array[2]#./}::${array[4]#./}"
          done
          if [[ -n $CODING_STYLE_ERRORS ]]
          then
            exit 1
          else
            echo No coding style errors detected
          fi

  compile_program:
    name: Compile Chocolatine
    needs: check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/compile-env:latest

    steps:
      - name: Sync Code
        uses: actions/checkout@v3

      - name: Compilation
        run: |
          make
          make clean

      - name: Validate Executable
        run: |
          if [ ! -x "${EXEC_NAME}" ]; then
            echo "${EXEC_NAME} is not executable or missing."
            exit 1
          fi

  testing:
    name: Execute Tests
    needs: compile_program
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/test-env:latest

    steps:
      - name: Sync Code
        uses: actions/checkout@v3

      - name: Run Chocolatine Tests
        run: make tests_run

  mirror_repo:
    name: Mirror to Target Repository
    needs: testing
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Mirror Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.TARGET_REPO }}
          ssh_private_key: ${{ secrets.SSH_KEY }}
